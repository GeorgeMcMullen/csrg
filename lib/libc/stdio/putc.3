.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)putc.3	6.4 (Berkeley) 01/20/91
.\"
.TH PUTC 3 ""
.UC 7
.SH NAME
fputc, putc, putchar, putw \- put a character or word to a stream
.SH SYNOPSIS
.nf
.ft B
#include <stdio.h>

int
fputc(int c, FILE *stream);

int
putc(int c, FILE *stream);

int
putchar(int c);

int
putw(int w, FILE *stream);
.ft R
.fi
.SH DESCRIPTION
.I Fputc
writes the character
.I c
(converted to an ``unsigned char'')
to the specified output
.IR stream .
.PP
.I Putc
acts essentially identically to
.IR fputc ,
but is a macro that expands in-line.
.PP
.I Putchar
is identical to
.I putc
with an output stream of
.BR stdout .
.PP
.I Putw
writes the specified
.B int
to the named output
.IR stream .
.SH "RETURN VALUE"
These functions return the integer constant
.SM
.B EOF
upon write error,
or if an attempt is made to write a read-only stream.
.I Putw
returns 0 on success;
the other functions return the character printed.
.SH "SEE ALSO"
ferror(3), fopen(3), getc(3), stdio(3)
.SH BUGS
The size and byte order of an
.B int
varies from one machine to another, and
.I putw
is not recommended for portable applications.
.PP
Because it is implemented as a macro,
.I putc
treats a
.I stream
argument with side effects incorrectly.
In particular, ``putc(c, *f++);'' may not work sensibly
(although ``putc(*cp++, f);''
.I does
work correctly).
