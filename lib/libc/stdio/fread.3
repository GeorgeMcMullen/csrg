.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)fread.3	6.4 (Berkeley) 03/05/91
.\"
.TH FREAD 3 ""
.UC 7
.SH NAME
fread, fwrite \- stream binary input/output
.SH SYNOPSIS
.nf
.ft B
#include <stdio.h>

int
fread(void *ptr, size_t size, size_t count, FILE *stream);

int
fwrite(void *ptr, size_t size, size_t count, FILE *stream);
.ft R
.fi
.SH DESCRIPTION
.I Fread
reads
.I count
items of data, each
.I size
bytes long, from the given input
.IR stream ,
storing them at the location given by
.IR ptr .
It returns the actual count of items read
(which will be less than
.I count
in the event of an
.B EOF
or error).
.PP
Fread does not distinguish between end-of-file and error, and callers
must use
.IR feof (3)
and
.IR ferror (3)
to determine which occurred.
.PP
.I Fwrite
writes
.I count
items of data, each
.I size
bytes long, to the given output
.I stream ,
obtaining them from the location given by
.IR ptr .
It returns the actual count of items written.
.SH "RETURN VALUE"
These functions return 0 (or a short count) upon end of file or error.
.SH "SEE ALSO"
read(2), write(2)
