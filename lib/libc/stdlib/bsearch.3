.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)bsearch.3	5.2 (Berkeley) 05/16/90
.\"
.TH BSEARCH 3 ""
.UC 7
.SH NAME
bsearch - binary search of a sorted table
.SH SYNOPSIS
.nf
.ft B
#include <stdlib.h>
.sp
char *
bsearch(const void *key, const void *base,
size_t nmemb, size_t size,
int (*compar) (const void *, const void *));
.ft R
.fi
.SH DESCRIPTION
The
.I bsearch
function searches an array of
.I nmemb
objects, the inital member of which is 
pointed to by
.IR base ,
for a member that matches the object pointed to by
.IR key .
The size of each member of the array is specified by 
.I size .
.PP
The contents of the array should be in ascending sorted order according
to the comparison function referenced by
.IR compar .
.I Compar
is called with two arguments that point to the
.I key
object and to an array member, in that order, and must return an integer
less than, equal to, or greater than zero if the
.I key
object is considered, respectively, to be less than, equal to, or to
greater than the array member.
.PP
The
.I bsearch
function returns a pointer to a matching member of the array, or a null
pointer if no match is found.
If two members compare as equal, which member is matched is unspecified.
.SH "SEE ALSO"
hsearch(3), lsearch(3), qsort(3), tsearch(3)
.SH STANDARDS
.B Bsearch
conforms to ANSI X3.159-1989 (``ANSI C'').
