.\" Copyright (c) 1983 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)en.4	6.4 (Berkeley) 06/23/90
.\"
.TH EN 4 ""
.UC 5
.SH NAME
en \- Xerox 3 Mb/s Ethernet interface
.SH SYNOPSIS
.B "device en0 at uba0 csr 161000 vector enrint enxint encollide"
.SH DESCRIPTION
The
.I en
interface provides access to a 3 Mb/s Ethernet network.
Due to limitations in the hardware, DMA transfers
to and from the network must take place in the lower 64K bytes
of the UNIBUS address space, and thus this must be among the first
UNIBUS devices enabled after boot.
.PP
Each of the host's network addresses
is specified at boot time with an SIOCSIFADDR
ioctl.  The station address is discovered by probing the on-board Ethernet
address register, and is used to verify the protocol addresses.
No packets will be sent or accepted until 
a network address is supplied.
.PP
The interface software implements an exponential backoff algorithm
when notified of a collision on the cable.  This algorithm utilizes
a 16-bit mask and the VAX-11's interval timer in calculating a series
of random backoff values.  The algorithm is as follows:
.TP 5
1.
Initialize the mask to be all 1's.
.TP 5
2.
If the mask is zero, 16 retries have been made and we give
up.
.TP 5
3.
Shift the mask left one bit and formulate a backoff by
masking the interval timer with the mask (this is actually
the two's complement of the value).
.TP 5
4.
Use the value calculated in step 3 to delay before retransmitting
the packet.
.PP
The interface handles both Internet and NS protocol families.
It normally tries to use a ``trailer'' encapsulation
to minimize copying data on input and output.
The use of trailers is negotiated with ARP.
This negotiation may be disabled, on a per-interface basis,
by setting the IFF_NOTRAILERS
flag with an SIOCSIFFLAGS ioctl.
.SH DIAGNOSTICS
.BR "en%d: output error" .
The hardware indicated an error on
the previous transmission.
.PP
.BR "en%d: send error" .
After 16 retransmissions using the
exponential backoff algorithm described above, the packet
was dropped.
.PP
.BR "en%d: input error" .
The hardware indicated an error
in reading a packet off the cable.
.PP
.BR "en%d: can't handle af%d" .
The interface was handed
a message with addresses formatted in an unsuitable address
family; the packet was dropped.
.SH SEE ALSO
netintro(4), inet(4)
.SH BUGS
The device has insufficient buffering to handle back to
back packets.  This makes use in a production environment
painful.
.PP
The hardware does word at a time DMA without byte swapping.
To compensate, byte swapping of user data must either be done 
by the user or by the system.  A kludge to byte swap only
IP packets is provided if the ENF_SWABIPS flag is defined in
the driver and set at boot time with an SIOCSIFFLAGS ioctl.
